user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        listen [::]:80;
        # 可以使用*（通配符）代替前缀和后缀，比如*.melelee.*匹配所有
        server_name *.melelee.*;

        return 301 https://$server_name$request_uri;
    }


    server {
        listen 443 ssl;
        server_name *.melelee.*;
        ssl_certificate cert/melelee.top_bundle.crt;
        ssl_certificate_key cert/melelee.top.key;

        # 普通前缀匹配
        location / {
            return 200 "this is /";
        }


        # 普通前缀匹配，匹配之间直接按长度
        location /img {
            return 200 "this is img";
        }

        # 普通前缀匹配，匹配之间直接按长度
        location /imge {
            return 200 "this is imge";
        }

        # 正则（大小写敏感）优先级大于普通前缀匹配,正则匹配之间按顺序
        location ~ \.JPG$ {
            return 200 "this is JPG";
        }

        # 正则（大小不写敏感）优先级大于普通前缀匹配,正则匹配之间直接按顺序
        location ~* \.jpg$ {
            return 200 "this is jpg";
        }

        # 非正则匹配，优先级比正则匹配高
        location ^~ /img/ {
            return 200 "this is img";
        }


        # 精确匹配，完整路径匹配，优先级比非正则匹配更高
        location = /img/test.jpg {
            return 200 "this is $request_uri";
        }

# 访问的url其实是由两部分组成，分别是origin(http://localhost:8080)和uri(/api/user)。
# 对于pathname我们将其分为两部分，第一部分path1为location块，第二部分path2为pathname剩余部分。我们把proxy_pass的地址定义为proxy_pass_url
# 当proxy_pass中的uri不为空时也即是以/开头，那么跳转地址就是proxy_pass+请求地址uri除去location剩下的部分
# 当proxy_pass中的uri为空时，那么跳转地址就是proxy_pass+请求地址uri

    }
}